# 此文件由makelocal.sh自动生成
# 此文件由makeobj.sh自动生成
############################################################
# 项目名 : 
# 模块名 : 
# 备  注 : 
############################################################

###### 源文件配置区
# 编译宏
AR		=	ar
AFLAGS		=	rv
SOFLAGS		=	-G -bnoentry
ESOFLAGS	=	-bdynamic -brtl -qcpluscm

# c源代码文件宏及推导规则
CC		=	xlc -q64 -qtls

c_FILE_o	=	$(c_FILE:.c=.o)
c_FILE2_o	=	$(c_FILE2:.c=.o)
c_FILE3_o	=	$(c_FILE3:.c=.o)
c_FILE4_o	=	$(c_FILE4:.c=.o)
c_FILE5_o	=	$(c_FILE5:.c=.o)
c_FILE_CLEAN	=	$(c_FILE_o) $(c_FILE2_o) $(c_FILE3_o) $(c_FILE4_o) $(c_FILE5_o)

.SUFFIXES:.c
.c.o	:
	$(CC) $(CFLAGS) -c $<

c_FILE		=	\
			test_hello.c \
			test_demo.c \
			test_stylesfunc.c \
			test_outputfunc.c \
			test_press.c \
			test_press_mpt.c \
			test_press_mpt_tls.c \
			test_memoryleak.c \
			test_funny.c \
			test_logconf.c \
			test_logconf.c \
			test_afterrotatefile.c \
			test_filterlogfunc \

###### 目标文件、安装目录配置区
BIN		=	$(c_FILE:.c=)

###### 编译选项
CFLAGS		=	-I. \
			-I../src \

###### 链接选项
LFLAGS		=	-L. \
			-L../src \
			-liLOG3 \
			-lpthread \

###### 额外宏定义区
CLEAN_ADDITION	=

###### 加载mktpl模板库
# 最终目标列表
all	:	$(BIN) $(BIN2) $(LIB) $(LIB2) $(OBJ) $(OBJ2) $(NOCLEAN_OBJ) $(NOINST_OBJ)

# 文件系统宏
CD		=	cd
RM		=	rm -f
CP		=	cp -f
MV		=	mv -f
MKDIR		=	mkdir -p

# 预定义源文件清理删除关联宏
_FILE_CLEAN	=	$(c_FILE_CLEAN) $(cpp_FILE_CLEAN) $(SQC_FILE_CLEAN) $(csm_FILE_CLEAN) $(c_html_FILE_CLEAN) $(cui_FILE_CLEAN) $(dtd_FILE_CLEAN) $(prt_FILE_CLEAN) $(fmd_FILE_CLEAN) $(smd_FILE_CLEAN) $(def_FILE_CLEAN) $(act_FILE_CLEAN)

# 清理删除规则
clean		:
	@for FILE in $(_FILE_CLEAN) $(BIN) $(BIN2) $(LIB) $(LIB2) $(OBJ) $(OBJ2) $(NOINST_OBJ) $(CLEAN_ADDITION) ; do \
		echo $(RM) $$FILE ; \
		$(RM) $$FILE ; \
	done


# 预定义源代码缺省头文件宏
DFTHDER		=	$(csm_FILE_DFTHDER) $(cui_FILE_DFTHDER) $(dtd_FILE_DFTHDER) $(prt_FILE_DFTHDER) $(fmd_FILE_DFTHDER) $(smd_FILE_DFTHDER) $(def_FILE_DFTHDER) $(act_FILE_DFTHDER)

# 提交安装规则
install		:	all

###### 目标文件依赖关系
test_hello		:	test_hello.o
	$(CC) -o $@ test_hello.o $(LFLAGS)

test_demo		:	test_demo.o
	$(CC) -o $@ test_demo.o $(LFLAGS)

test_press		:	test_press.o
	$(CC) -o $@ test_press.o $(LFLAGS)

test_press_mpt		:	test_press_mpt.o
	$(CC) -o $@ test_press_mpt.o $(LFLAGS)

test_press_mpt_tls	:	test_press_mpt_tls.o
	$(CC) -o $@ test_press_mpt_tls.o $(LFLAGS)

test_stylesfunc		:	test_stylesfunc.o
	$(CC) -o $@ test_stylesfunc.o $(LFLAGS)

test_outputfunc		:	test_outputfunc.o
	$(CC) -o $@ test_outputfunc.o $(LFLAGS)

test_memoryleak		:	test_memoryleak.o
	$(CC) -o $@ test_memoryleak.o $(LFLAGS)

test_funny		:	test_funny.o
	$(CC) -o $@ test_funny.o $(LFLAGS)

test_logconf		:	test_logconf.o
	$(CC) -o $@ test_logconf.o $(LFLAGS)

test_logsconf		:	test_logsconf.o
	$(CC) -o $@ test_logsconf.o $(LFLAGS)

test_afterrotatefile	:	test_afterrotatefile.o
	$(CC) -o $@ test_afterrotatefile.o $(LFLAGS)

test_filterlogfunc	:	test_filterlogfunc.o
	$(CC) -o $@ test_filterlogfunc.o $(LFLAGS)
